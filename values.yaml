# values.yaml for MongoDB Community Operator

## Global settings
global:
  imageRegistry: ""

## Chart naming
nameOverride: ""
fullnameOverride: ""

## Demo CRM Application Configuration
democrm:
  replicaCount: 2
  
  image:
    repository: pwstaging/demo-crm
    pullPolicy: IfNotPresent
    tag: "latest"

  config:
    logLevel: "info"
    persistence: "true"
  
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 256Mi

  livenessProbe:
    httpGet:
      path: /
      port: 3000
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    
  readinessProbe:
    httpGet:
      path: /
      port: 3000
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 3

  service:
    type: ClusterIP
    port: 80
    targetPort: 3000

## Ingress Configuration (HTTPS Enabled)
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
  hosts:
    - host: kfir-cowsay.ddns.net
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: democrm-tls
      hosts:
        - kfir-cowsay.ddns.net

## Certificate Manager Configuration - DISABLED (managed by App-of-Apps)
certManager:
  enabled: false
  clusterIssuer:
    name: letsencrypt-staging
    email: kfiramoyal@gmail.com

## MongoDB Community Operator Configuration - DISABLED (managed by App-of-Apps)
communityOperator:
  enabled: false
  operator:
    watchNamespace: "*"
  
  mongodb:
    name: mongodb-replica-set
    members: 2
    type: ReplicaSet
    version: "7.0.8"
    
    security:
      authentication:
        modes: ["SCRAM"]
    
    users:
    - name: admin
      db: admin
      passwordSecretRef:
        name: mongodb-admin-password
      roles:
      - name: root
        db: admin
      scramCredentialsSecretName: mongodb-scram
    
    persistence:
      single:
        storage: 5Gi
        storageClass: standard

## Ingress-Nginx Configuration - DISABLED (managed by App-of-Apps)
ingressNginx:
  enabled: false

## Sealed Secrets Configuration - DISABLED (managed by App-of-Apps)
sealedSecrets:
  enabled: false
  controller:
    create: true

## Security settings
security:
  mongodbSecret:
    create: true
    name: ""
    useSealed: false

## Service Account
serviceAccount:
  create: false
  name: ""

## Pod Security Context
podSecurityContext:
  fsGroup: 2000

## Container Security Context
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

## Additional configurations
podAnnotations: {}
nodeSelector: {}
tolerations: []
affinity: {}